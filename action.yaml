name: 'Test poemai Bot'
description: 'Automated testing for poemai chatbots with comprehensive scenario execution and reporting'
author: 'poemAI-ch'

inputs:
  config-file:
    description: 'Path to the test scenarios configuration YAML file'
    required: true
  role-to-assume:
    description: 'ARN of the AWS IAM role to assume'
    required: true
  aws-region:
    description: 'AWS region'
    required: false
    default: 'eu-central-2'
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.12'
  openai-api-key:
    description: 'OpenAI API key for AI-powered test evaluation'
    required: true
  publish-s3-url:
    description: 'S3 URL to publish the HTML test report (e.g., s3://bucket/path/report.html)'
    required: false
    default: ''
  results-dir:
    description: 'Directory to save test results'
    required: false
    default: '.'

outputs:
  test-results-file:
    description: 'Path to the generated test results JSON file'
    value: ${{ steps.run-tests.outputs.test-results-file }}
  report-url:
    description: 'URL of the published HTML report (if S3 publishing is enabled)'
    value: ${{ steps.run-tests.outputs.report-url }}
  tests-passed:
    description: 'Number of tests that passed'
    value: ${{ steps.run-tests.outputs.tests-passed }}
  tests-failed:
    description: 'Number of tests that failed'
    value: ${{ steps.run-tests.outputs.tests-failed }}
  tests-skipped:
    description: 'Number of tests that were skipped'
    value: ${{ steps.run-tests.outputs.tests-skipped }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}

    - name: Install dependencies
      shell: bash
      run: |
        echo "üì¶ Installing dependencies..."
        pip install --upgrade pip
        pip install boto3 pyyaml requests jinja2 pydantic poemai-utils
                
        echo "‚úÖ Dependencies installed successfully"

    - name: Validate configuration file
      shell: bash
      run: |
        echo "üîç Validating configuration file..."
        if [ ! -f "${{ inputs.config-file }}" ]; then
          echo "‚ùå Configuration file not found: ${{ inputs.config-file }}"
          exit 1
        fi
        
        # Basic YAML validation
        python -c "import yaml; yaml.safe_load(open('${{ inputs.config-file }}'))" || {
          echo "‚ùå Invalid YAML syntax in configuration file"
          exit 1
        }
        
        echo "‚úÖ Configuration file is valid"

    - name: Run bot tests
      id: run-tests
      shell: bash
      env:
        CONFIG_FILE: ${{ inputs.config-file }}
        OPENAI_API_KEY: ${{ inputs.openai-api-key }}
        PUBLISH_S3_URL: ${{ inputs.publish-s3-url }}
        RESULTS_DIR: ${{ inputs.results-dir }}
        AWS_REGION: ${{ inputs.aws-region }}
      run: |
        ${{ github.action_path }}/run_tests.sh

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bot-test-results
        path: test_results.json
        retention-days: 30

branding:
  icon: 'message-circle'
  color: 'green'
